services:
  postgres:
    image: postgres:17.2
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: demo
      TZ: Asia/Phnom_Penh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d demo -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  redis:
    image: redis/redis-stack-server:6.2.6-v19
    container_name: redis
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
  rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    container_name: rabbitmq
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./docker/elk/es.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      node.name: elasticsearch
      cluster.name: docker-cluster
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: admin123
      discovery.type: single-node
      http.port: 9200
      http.cors.allow-origin: http://localhost:1358, http://127.0.0.1:1358
      http.cors.enabled: true
      http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      http.cors.allow-credentials: true
      xpack.security.enabled: false
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9200' ]
      interval: 10s
      timeout: 5s
      retries: 3
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.3
    container_name: kibana
    volumes:
      - ./docker/elk/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      KIBANA_SYSTEM_PASSWORD: kibana
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:5601' ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - elasticsearch